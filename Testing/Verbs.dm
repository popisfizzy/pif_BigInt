#define	DEBUG

mob/verb

	BigInt_Sum_SpeedTest()
		set name = "BigInt Addition"
		set category = "Speed Test"

		var
			pif_BigInt
				I = new(0x0000, 0xaef6, 0x9ed5, 0x1230, 0xd017, 0x0d61, 0x78e2, 0x3b13, 0x5837, 0xb68e, 0x75ac,
						0xbd24, 0x1df8, 0x9950, 0x0a4d, 0x138e, 0x47c1, 0x0138, 0x8be0, 0x68ba, 0x70d5, 0xbb9a,
						0x6c32, 0x4b83, 0xafef, 0x88b7, 0x99bd, 0x925f, 0x7b0a, 0x4579, 0x8613, 0xb2e7, 0x4777,
						0xbae1, 0x39d0, 0x2a64, 0xbf3b, 0x3006, 0x510a, 0x9f85, 0xf5cd)
				J = new(0x0000, 0xe643, 0xc059, 0x2f30, 0x69a6, 0xa645, 0xcfd1, 0x9bee, 0x2c25, 0xedb4, 0x8a38,
						0xb051, 0x84bf, 0x783f, 0x8691, 0x090b, 0x51a9, 0xedf1, 0x382f, 0x0e50, 0xda0a, 0x8602,
						0x7b7b, 0x8fe6, 0xc33f, 0x20fe, 0xdaed, 0x7558, 0x0959, 0x01f0, 0x8e82, 0x0bec, 0xd847,
						0x6a42, 0xee18, 0x3ba7, 0xd1d0, 0x4d0f, 0xbd86, 0x3c2f, 0x1855)

			I_0x = I.PrintHex()
			J_0x = J.PrintHex()

		I.Add(J)
		world << "<tt>0x[I_0x] + 0x[J_0x] = 0x[I.PrintHex()].</tt>\n"

	BigInt_Diff_SpeedTest()
		set name = "BigInt Subtraction"
		set category = "Speed Test"

		var
			pif_BigInt
				I = new(0x0000, 0xaef6, 0x9ed5, 0x1230, 0xd017, 0x0d61, 0x78e2, 0x3b13, 0x5837, 0xb68e, 0x75ac,
						0xbd24, 0x1df8, 0x9950, 0x0a4d, 0x138e, 0x47c1, 0x0138, 0x8be0, 0x68ba, 0x70d5, 0xbb9a,
						0x6c32, 0x4b83, 0xafef, 0x88b7, 0x99bd, 0x925f, 0x7b0a, 0x4579, 0x8613, 0xb2e7, 0x4777,
						0xbae1, 0x39d0, 0x2a64, 0xbf3b, 0x3006, 0x510a, 0x9f85, 0xf5cd)
				J = new(0x0000, 0xe643, 0xc059, 0x2f30, 0x69a6, 0xa645, 0xcfd1, 0x9bee, 0x2c25, 0xedb4, 0x8a38,
						0xb051, 0x84bf, 0x783f, 0x8691, 0x090b, 0x51a9, 0xedf1, 0x382f, 0x0e50, 0xda0a, 0x8602,
						0x7b7b, 0x8fe6, 0xc33f, 0x20fe, 0xdaed, 0x7558, 0x0959, 0x01f0, 0x8e82, 0x0bec, 0xd847,
						0x6a42, 0xee18, 0x3ba7, 0xd1d0, 0x4d0f, 0xbd86, 0x3c2f, 0x1855)

			I_0x = I.PrintHex()
			J_0x = J.PrintHex()

		J.Subtract(I)

		world << "<tt>0x[J_0x] - 0x[I_0x] = 0x[J.PrintHex()]</tt>\n"

	BigInt_Prod_SpeedTest()
		set name = "BigInt Product"
		set category = "Speed Test"

		var
			pif_BigInt
				I = new(0x0000, 0xaef6, 0x9ed5, 0x1230, 0xd017, 0x0d61, 0x78e2, 0x3b13, 0x5837, 0xb68e, 0x75ac,
						0xbd24, 0x1df8, 0x9950, 0x0a4d, 0x138e, 0x47c1, 0x0138, 0x8be0, 0x68ba, 0x70d5, 0xbb9a,
						0x6c32, 0x4b83, 0xafef, 0x88b7, 0x99bd, 0x925f, 0x7b0a, 0x4579, 0x8613, 0xb2e7, 0x4777,
						0xbae1, 0x39d0, 0x2a64, 0xbf3b, 0x3006, 0x510a, 0x9f85, 0xf5cd)
				J = new(0x0000, 0xe643, 0xc059, 0x2f30, 0x69a6, 0xa645, 0xcfd1, 0x9bee, 0x2c25, 0xedb4, 0x8a38,
						0xb051, 0x84bf, 0x783f, 0x8691, 0x090b, 0x51a9, 0xedf1, 0x382f, 0x0e50, 0xda0a, 0x8602,
						0x7b7b, 0x8fe6, 0xc33f, 0x20fe, 0xdaed, 0x7558, 0x0959, 0x01f0, 0x8e82, 0x0bec, 0xd847,
						0x6a42, 0xee18, 0x3ba7, 0xd1d0, 0x4d0f, 0xbd86, 0x3c2f, 0x1855)

				K

			I_0x = I.PrintHex()
			J_0x = J.PrintHex()

		K = I.Multiply(J)

		world << "<tt>0x[J_0x] * 0x[I_0x] = 0x[K.PrintHex()]</tt>\n"

	BigInt_Square_SpeedTest()
		set name = "BigInt Square"
		set category = "Speed Test"

		var/pif_BigInt
			I = new(0x0000, 0xaef6, 0x9ed5, 0x1230, 0xd017, 0x0d61, 0x78e2, 0x3b13, 0x5837, 0xb68e, 0x75ac,
					0xbd24, 0x1df8, 0x9950, 0x0a4d, 0x138e, 0x47c1, 0x0138, 0x8be0, 0x68ba, 0x70d5, 0xbb9a,
					0x6c32, 0x4b83, 0xafef, 0x88b7, 0x99bd, 0x925f, 0x7b0a, 0x4579, 0x8613, 0xb2e7, 0x4777,
					0xbae1, 0x39d0, 0x2a64, 0xbf3b, 0x3006, 0x510a, 0x9f85, 0xf5cd)

			J = I.Square()

		world << "<tt>0x[I.PrintHex()] ** 2 = 0x[J.PrintHex()]</tt>\n"

	BigInt_Exp_SpeedTest()
		set name = "BigInt Exp"
		set category = "Speed Test"

		var
			const/EXP = 10
			pif_BigInt
				I = new(0x0000, 0xaef6, 0x9ed5, 0x1230, 0xd017, 0x0d61, 0x78e2, 0x3b13, 0x5837, 0xb68e, 0x75ac,
						0xbd24, 0x1df8, 0x9950, 0x0a4d, 0x138e, 0x47c1, 0x0138, 0x8be0, 0x68ba, 0x70d5, 0xbb9a,
						0x6c32, 0x4b83, 0xafef, 0x88b7, 0x99bd, 0x925f, 0x7b0a, 0x4579, 0x8613, 0xb2e7, 0x4777,
						0xbae1, 0x39d0, 0x2a64, 0xbf3b, 0x3006, 0x510a, 0x9f85, 0xf5cd)

				J = I.Power(EXP)

		world << "<tt>0x[I.PrintHex()] ** [EXP] = 0x[J.PrintHex()]</tt>\n"

	BigInt_Factorial_SpeedTest()
		set name = "BigInt Factorial"
		set category = "Speed Test"

		var
			const/FACT = 450
			pif_BigInt/A = new(0x0001)

		for(var/i = 1, i <= FACT, i ++)
			A = A.Multiply(i)

		world << "<tt>[FACT]! = 0x[A.PrintHex()]</tt>\n"